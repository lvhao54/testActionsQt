name: Ubuntu
# Qt官方没有linux平台的x86包
on: 
  push:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        qt_ver: [5.15.2]
        qt_arch: [gcc_64]
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.2
        with:
          version: ${{ matrix.qt_ver }}
          modules: 'qtcharts'
          cached: 'false'

      - name: ubuntu install GL library
        run: sudo apt-get install -y libglew-dev libglfw3-dev wget libc-bin libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: build ubuntu
        run: |
          mkdir build && cd build
          cmake ..
          make

      
      # 打包
      - name: package
        run: |
          # 拷贝依赖
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt-continuous-x86_64.AppImage
          mv linuxdeployqt-continuous-x86_64.AppImage linuxdeployqt
          # mv linuxdeployqt /usr/local/bin

          pwd
          ls
          ./linuxdeployqt --version

          cd build
          pwd
          cp ../default.desktop ./
          ls
          ../linuxdeployqt testActionsQt -appimage

      # 上传artifacts          
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.targetName }}_${{ matrix.os }}_${{matrix.qt_ver}}.zip
          path: build/
